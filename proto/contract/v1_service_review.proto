syntax = "proto3";

package proto;

option go_package = "swrc/proto/pb";

import "google/protobuf/empty.proto";

import "v1_rpc_create_snippet_topic.proto";
import "v1_rpc_submit_new_snippet_version.proto";
import "v1_rpc_comment_on_snippet_topic.proto";
import "v1_rpc_choose_snippet_topic_solution.proto";
import "v1_rpc_modify_snippet_topic.proto";
import "v1_rpc_modify_snippet.proto";
import "v1_rpc_choose_snippet_topic_best_answer.proto";
import "v1_rpc_vote_on_comment.proto";
import "v1_rpc_remove_vote_from_comment.proto";
import "v1_rpc_remove_comment_from_snippet_topic.proto";
import "v1_rpc_delete_snippet_topic.proto";
import "v1_rpc_fetch_snippet_topics.proto";
import "v1_rpc_fetch_snippets.proto";
import "v1_rpc_fetch_comments.proto";

service ReviewService{
    rpc CreateSnippetTopic(CreateSnippetTopicRequest) returns (google.protobuf.Empty){}
    rpc SubmitNewSnippetVersion(SubmitNewSnippetVersionRequest) returns (google.protobuf.Empty){}
    rpc CommentOnSnippetTopic(CommentOnSnippetTopicRequest) returns (google.protobuf.Empty){}
    rpc ChooseSnippetTopicSolution(ChooseSnippetTopicSolutionRequest) returns (google.protobuf.Empty){}
    rpc ModifySnippetTopic(ModifySnippetTopicRequest) returns (google.protobuf.Empty){}
    rpc ModifySnippet(ModifySnippetRequest) returns (google.protobuf.Empty){}
    rpc ChooseSnippetTopicBestAnswer(ChooseSnippetTopicBestAnswerRequest) returns (google.protobuf.Empty){}
    rpc VoteOnComment(VoteOnCommentRequest) returns (google.protobuf.Empty){}
    rpc RemoveVoteFromComment(RemoveVoteFromCommentRequest) returns (google.protobuf.Empty){}
    rpc RemoveCommentFromSnippetTopic(RemoveCommentFromSnippetTopicRequest) returns (google.protobuf.Empty){}
    rpc DeleteSnippetTopic(DeleteSnippetTopicRequest) returns (google.protobuf.Empty){}
    rpc FetchSnippetTopics(FetchSnippetTopicsRequest) returns (FetchSnippetTopicsReply){}
    rpc FetchSnippets(FetchSnippetsRequest) returns (FetchSnippetsReply){}
    rpc FetchComments(FetchCommentsRequest) returns (FetchCommentsReply){}
}